<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>MongoDB on Mango Blog</title><link>https://et860525.github.io/tags/mongodb/</link><description>Recent content in MongoDB on Mango Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 17 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://et860525.github.io/tags/mongodb/index.xml" rel="self" type="application/rss+xml"/><item><title>Node.js + JWT Authentication 專案(三) - 專案 Controller 與 Middleware</title><link>https://et860525.github.io/posts/jwt-authentication-function-and-middleware/</link><pubDate>Mon, 17 Apr 2023 00:00:00 +0000</pubDate><guid>https://et860525.github.io/posts/jwt-authentication-function-and-middleware/</guid><description>&lt;p>最後一章就要來完成整個專案，把剩下的 Controller、Middleware 與 Routes 完成即可。&lt;/p></description></item><item><title>Node.js + JWT Authentication 專案(二) - 資料庫 Models 與 JWT</title><link>https://et860525.github.io/posts/jwt-authentication-models-jwt/</link><pubDate>Sun, 16 Apr 2023 00:00:00 +0000</pubDate><guid>https://et860525.github.io/posts/jwt-authentication-models-jwt/</guid><description>&lt;p>此篇章會使用 &lt;a href="https://typegoose.github.io/typegoose/">Typegoose&lt;/a> 來建立資料庫的 models，並且設定獲得與驗證 JWT 的方法。&lt;/p></description></item><item><title>Node.js + JWT Authentication 專案(一) - 初始化專案</title><link>https://et860525.github.io/posts/jwt-authentication-init/</link><pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate><guid>https://et860525.github.io/posts/jwt-authentication-init/</guid><description>&lt;p>這個專案會使用 Node.js 和 TypeScript 來建構 REST API 後端，使用 &lt;a href="https://jwt.io/">JWT&lt;/a> 來實作身分認證與授權。&lt;/p>
&lt;blockquote>
&lt;p>此專案會遵循我慣用的 OOP 架構 &lt;a href="https://github.com/et860525/express-project-architecture">et860525/express-project-architecture&lt;/a>，有鑑於上一次專案的經驗，由於這些都只是小專案，我不會把所有東西都全部都包在 class 裡面&lt;/p>
&lt;/blockquote>
&lt;p>建構此專案會用到的重要套件：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Package&lt;/th>
&lt;th>Usage&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="https://expressjs.com/">Express&lt;/a>&lt;/td>
&lt;td>Web 應用框架&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://www.typescriptlang.org/">TypeScript&lt;/a>&lt;/td>
&lt;td>開發工具&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://mongoosejs.com/">Mongoose&lt;/a>&lt;/td>
&lt;td>訪問資料庫&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://www.docker.com/">Docker&lt;/a>&lt;/td>
&lt;td>應用容器化&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://www.mongodb.com/">MongoDB&lt;/a>&lt;/td>
&lt;td>儲存使用者的資料庫&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://www.npmjs.com/package/redis">Redis&lt;/a>&lt;/td>
&lt;td>儲存使用者緩存的 session 資料庫&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/auth0/node-jsonwebtoken">JsonWebToken&lt;/a>&lt;/td>
&lt;td>產生 JWTs&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/dcodeIO/bcrypt.js">Bcryptjs&lt;/a>&lt;/td>
&lt;td>密碼加密&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/colinhacks/zod">Zod&lt;/a>&lt;/td>
&lt;td>驗證使用者的輸入&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://typegoose.github.io/typegoose/">Typegoose&lt;/a>&lt;/td>
&lt;td>使用 TypeScript 優化 Mongoose 模型&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/motdotla/dotenv">Dotenv&lt;/a>&lt;/td>
&lt;td>讀取環境變數&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/expressjs/cors">Cors&lt;/a>&lt;/td>
&lt;td>允許資料能在前端與後端之間分享&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://lodash.com/">lodash&lt;/a>&lt;/td>
&lt;td>對 JavaScript 的功能擴充&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://github.com/wclr/ts-node-dev">ts-node-dev&lt;/a>&lt;/td>
&lt;td>當檔案變更時自動重啟&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Docker: 設定 MongoDB</title><link>https://et860525.github.io/posts/docker-mongodb/</link><pubDate>Fri, 03 Mar 2023 00:00:00 +0000</pubDate><guid>https://et860525.github.io/posts/docker-mongodb/</guid><description>&lt;p>使用 Docker 來建置 MongoDB，可以先到 &lt;a href="https://hub.docker.com/_/mongo">docker mongo&lt;/a> 來選擇版本。&lt;/p>
&lt;p>MongoDB 會有幾種架構：&lt;/p>
&lt;ol>
&lt;li>Standalone
&lt;ul>
&lt;li>建立難度 &lt;strong>低&lt;/strong>&lt;/li>
&lt;li>單一 MongoDB 資料庫&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://www.mongodb.com/docs/manual/replication/">Replica Set&lt;/a>
&lt;ul>
&lt;li>建立難度 &lt;strong>中&lt;/strong>&lt;/li>
&lt;li>資料會有多個副本提供容錯空間&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://www.mongodb.com/docs/manual/sharding/">Sharded Cluster&lt;/a>
&lt;ul>
&lt;li>建立難度 &lt;strong>高&lt;/strong>&lt;/li>
&lt;li>資料放置在不同的 shard，每個 shard 或 config servers 都是 &lt;code>Replica Set&lt;/code>
&lt;img loading="lazy" src="https://et860525.github.io/images/Docker-mongodb/Docker-sharded-cluster-production-architecture.png" alt="Docker-sharded-cluster-production-architecture.png" />
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol></description></item></channel></rss>